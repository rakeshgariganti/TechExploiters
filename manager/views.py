from django.shortcuts import render,redirect
from django.http import *
from models import *
from forms import *
import random
import time
# Create your views here.
SHOW_TIME = True

def getLevels():
	return (
			('You need little more knowledge of HTML tag attributes!!',len(Team.objects.filter(level11=True))),
			('I don\'t want to comment on this :/ ',len(Team.objects.filter(level12=True))),
			('Rules are for fools ;)',len(Team.objects.filter(level13=True))),
			('Who ate my banana? :(',len(Team.objects.filter(level14=True))),
			('Can you hack this?',len(Team.objects.filter(level21=True))),
			('Free meals are always tasty!!',len(Team.objects.filter(level22=True))),
			('Easy one for ya!!',len(Team.objects.filter(level23=True))),
			('I\'m more concerned about privacy of this challenge.',len(Team.objects.filter(level24=True))),
			('Two seconds time is infinite in digital world :X',len(Team.objects.filter(level31=True))),
			('Hmm...This sounds little interesting!!',len(Team.objects.filter(level32=True))),
			)

def index(request):
	if SHOW_TIME:
		if not request.session.has_key('loggedin'):
		 	return redirect('/login')

		team = Team.objects.get(pk=request.session['team'])
		levels = getLevels()
		return render(request,'show.html',{'levels':levels, 'team':team})#request.session['team']})
	else:
		return render(request,'home.html')

def login(request):
	if request.method == "POST":
		team = Team.objects.filter(name=request.POST['name'], password=request.POST['password'])
		if len(team) == 1:
			request.session['team'] = team[0].id
			request.session['loggedin'] = True
		return HttpResponseRedirect('/')
	return render(request, 'login.html')

def logout(request):
	if request.session.has_key('loggedin') and request.session.has_key('team'):
		del request.session['loggedin']
		del request.session['team']
	return HttpResponseRedirect('/')

def register(request):
	if request.method == "POST" and len(Team.objects.filter(name=request.POST.get('name',"alkfjhkjasd"))) == 0:
		t = Team.objects.create(name=request.POST['name'],password=request.POST['password'],members=3,
			member1name=request.POST['member1name'],member1email=request.POST['member1email'],
			member2name=request.POST['member2name'],member2email=request.POST['member2email'],
			member3name=request.POST['member3name'],member3email=request.POST['member3email']
			)
		return HttpResponseRedirect('/')
	return render(request,'register.html')

def hack(request,roundid,levelid):
	if not SHOW_TIME:
		return HttpResponseRedirect('/')
	if not request.session.has_key('loggedin'):
		return redirect('/login')

	team = Team.objects.get(pk=request.session['team'])
	levels = getLevels()
	response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})

	if request.method == 'POST':
		if roundid == '1':
			if levelid == '1':
				if request.POST.get('author',False) == 'anonymous' and not team.level11:
					team.level11 = True
					team.score += 5
					team.save()
					response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})
			elif levelid == '2':
				if request.POST.get('password',False) == 'fridayfriedrice' and not team.level12:
					team.level12 = True
					team.score += 5
					team.save()
					response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})
			elif levelid == '3':
				if request.POST.get('user',False) == 'admin' and not team.level13:
					team.level13 = True
					team.score += 5
					team.save()
					response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})
			elif levelid == '4':
				if request.POST.get('who',"False").lower() == 'ramanujam' and not team.level14:
					team.level14 = True
					team.score += 5
					team.save()
					response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})
		if roundid == '2' and levelid == '2':
			print request.POST
			if request.POST.get('money',False) == '200' and not team.level22:
				team.level22 = True
				team.score += 10
				team.save()
				response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})

	else:		
		if roundid == '2' and levelid == '1':
				if request.COOKIES.has_key('canyouhackthis') and request.COOKIES['canyouhackthis'] == 'yes' and not team.level21:
					team.level21 = True
					team.score += 10
					team.save()
					del request.COOKIES['canyouhackthis']
					response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})
				else:
					if not team.level21:
						response.set_cookie('canyouhackthis',"no")

		if roundid == '2' and levelid == '3':
			if request.GET.get('yureka',False) == 'srzkr' and not team.level23:
				team.level23 = True
				team.score += 10
				team.save()
				response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})
		if roundid == '2' and levelid == '4':
			if request.GET.get('flag',False) == 'uberhackers' and not team.level24:
				team.level24 = True
				team.score += 10
				team.save()
				response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})
		if roundid == '3' and levelid == '1':
			if request.GET.get('flag',False) == 'skajfhnkjwlkejfhaslkdjfnlaks' and not team.level31:
				team.level31 = True
				team.score += 20
				team.save()
				response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})				
		if roundid == '3' and levelid == '2':
			if request.META.has_key('HTTP_USER_AGENT') and "spartan" in request.META['HTTP_USER_AGENT'].lower()  and not team.level32:
					team.level32 = True
					team.score += 20
					team.save()
					response = render(request,'challenge.html',{'round':roundid, 'level':levelid, 'team':team, 'levels':levels})				
	return response

def leaderboard(request):
	if not request.session.has_key('loggedin'):
		return redirect('/login')

	teams = Team.objects.order_by('-score')
	team = Team.objects.get(pk=request.session['team'])
	return render(request,'leaderboard.html',{'teams':teams,'team':team})

def program1(request):
	if request.GET.get('number',False):
		if request.session.get('time',False):
			if int(time.time())<=request.session['time']+2 and str(request.GET['number']) == str(request.session['number']):
				return HttpResponse("flag is 'skajfhnkjwlkejfhaslkdjfnlaks'")
			else:
				return HttpResponse("you are late")
	request.session['time'] = int(time.time())
	number = random.randint(100000,1000000)
	request.session['number'] = number
	return HttpResponse(number)